<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Tt+Ke7K0WcYAAAAASUVORK5CYII=
</value>
  </data>
</root>